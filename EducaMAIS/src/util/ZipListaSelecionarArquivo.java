/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ZipListaSelecionarArquivo.java
 *
 * Created on 14/01/2014, 10:18:02
 */
package util;

import gui.DialogPadrao;
import java.awt.Dialog.ModalityType;
import java.util.List;

/**
 *
 * @author marcelo
 */
public class ZipListaSelecionarArquivo extends DialogPadrao {

    public int BTN_PRESSIONADO = 0;
    public int BTN_SELECIONAR = 1;
    public int BTN_CANCELAR = 2;
    
    private String arqZip;
    private List<String> arquivos;
    
    /** Creates new form ZipListaSelecionarArquivo */
    public ZipListaSelecionarArquivo(String arqZip) {
        super(null, ModalityType.APPLICATION_MODAL);
        initComponents();
        this.arqZip = arqZip;
        
        txtArqZip.setText(arqZip);
        
        atualizaListagem();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSelecionar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtArqZip = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePadrao1 = new gui.TablePadrao();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ZIP");

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });
        jPanel1.add(btnSelecionar);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar);

        jLabel1.setText("Arquivo .ZIP:");

        txtArqZip.setEditable(false);

        tablePadrao1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablePadrao1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(txtArqZip, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtArqZip, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 211, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 20, Short.MAX_VALUE)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
    if(tablePadrao1.getSelectedRow() != -1) {
        BTN_PRESSIONADO = BTN_SELECIONAR;
        this.dispose();
    } else {
        new Msg().msgAtencao("Nenhum arquivo selecionado.");
    }
}//GEN-LAST:event_btnSelecionarActionPerformed

private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
    BTN_PRESSIONADO = BTN_CANCELAR;
    this.dispose();
}//GEN-LAST:event_btnCancelarActionPerformed

    private void atualizaListagem() {
        tablePadrao1.limparTabela();
        arquivos = new Zip(arqZip).getListagemArquivoDentroZip();
        if(arquivos != null) {
            for(String s : arquivos) {
                tablePadrao1.adicionarLinha(new Object[] {s});
            }
        }
    }
    
    public String getNomeArquivoSelecionado() {
        return arquivos.get(tablePadrao1.getSelectedRow());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private gui.TablePadrao tablePadrao1;
    private javax.swing.JTextField txtArqZip;
    // End of variables declaration//GEN-END:variables
}
