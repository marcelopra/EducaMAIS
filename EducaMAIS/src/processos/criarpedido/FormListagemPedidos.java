package processos.criarpedido;

import cadastro.alunos.FormSelecionarAluno;
import entidades.Aluno;
import entidades.Pedido;
import gui.DialogPadrao;
import java.awt.Color;
import java.awt.Component;
import java.awt.Window;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import processos.emitircertificado.EmitirCertificado;
import processos.montarpedido.FormGravarCd;
import util.Msg;

public class FormListagemPedidos extends DialogPadrao {
    
    private List<Pedido> listagem;
    
    public FormListagemPedidos(Window parent) {
        super(parent, ModalityType.MODELESS);
        initComponents();
        
        tablePadrao1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        
        comboBoxAluno1.atualizaComboComOpcaoTodos();
        
        tablePadrao1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {  
            public Component getTableCellRendererComponent(JTable table, Object value,  
                    boolean isSelected, boolean hasFocus, int row, int column) {  
                
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                Color whiteColor = new Color(254, 254, 254);  
                Color alternateColor = new Color(225, 225, 225);  
                Color selectedColor = new Color(61, 128, 223);  
                
                /*Aplica efeito zebra*/
                Color bg;  
                if (!isSelected) 
                    bg = (row % 2 == 0 ? alternateColor : whiteColor);  
                else  
                    bg = selectedColor;

                setBackground(bg);
                if(listagem.get(row).getDataEmissaoCertificado() == null) {
                    setForeground(Color.red);
                } else {
                    setForeground(isSelected ? Color.white : Color.black);
                }

                return this;    
            }  
        });  
               
        atualizaListagem();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablePadrao1 = new gui.TablePadrao();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        btnGravarCd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comboBoxAluno1 = new gui.ComboBoxAluno();
        jButton7 = new javax.swing.JButton();

        setTitle("Pedidos Pendentes de Montagem");

        tablePadrao1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Curso", "Data Início", "Data Conclusão", "Nº de Registro", "Data Emissão do Cert."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePadrao1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(tablePadrao1);
        if (tablePadrao1.getColumnModel().getColumnCount() > 0) {
            tablePadrao1.getColumnModel().getColumn(0).setPreferredWidth(25);
            tablePadrao1.getColumnModel().getColumn(1).setPreferredWidth(350);
            tablePadrao1.getColumnModel().getColumn(2).setPreferredWidth(100);
            tablePadrao1.getColumnModel().getColumn(3).setPreferredWidth(100);
            tablePadrao1.getColumnModel().getColumn(4).setPreferredWidth(75);
            tablePadrao1.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Novo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Editar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("Excluir");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Cancelar Curso");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Emitir Certificado");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        btnGravarCd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGravarCd.setText("Gravar CD com o(s) Curso(s)");
        btnGravarCd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarCdActionPerformed(evt);
            }
        });
        jPanel3.add(btnGravarCd);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Aluno:");

        comboBoxAluno1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboBoxAluno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxAluno1ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupa.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1239, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(comboBoxAluno1, javax.swing.GroupLayout.PREFERRED_SIZE, 718, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboBoxAluno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxArea1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxArea1ActionPerformed
        atualizaListagem();
    }//GEN-LAST:event_comboBoxArea1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(getPedidoSelecionado() != null) {
            if(!getPedidoSelecionado().isAntigo()) {
                new FormCadastroPedido(getPedidoSelecionado()).setVisible(true);
                atualizaListagem();
            } else {
                new Msg().msgAtencao("Este curso foi realizado na empresa antiga, e não pode ser editado.");
            }
        } else {
            new Msg().msgAtencao("Nenhum curso selecionado.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(comboBoxAluno1.getAlunoSelecionado() != null) {
            if(!comboBoxAluno1.getAlunoSelecionado().equals(Aluno.TODOS)) {
                new FormCadastroPedido(comboBoxAluno1.getAlunoSelecionado()).setVisible(true);
                atualizaListagem();
            } else {
                new Msg().msgAtencao("Você precisa selecionar um aluno.");
            }
        } else {
            new Msg().msgAtencao("Nenhum aluno selecionado.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if(getPedidoSelecionado() != null) {
            new PedidoController().deletar(getPedidoSelecionado());
            atualizaListagem();
        } else {
            new Msg().msgAtencao("Nenhum curso selecionado.");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnGravarCdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarCdActionPerformed
        if(getPedidosSelecionados() != null && getPedidosSelecionados().size() > 0) {
            new FormGravarCd(getPedidosSelecionados()).setVisible(true);
            atualizaListagem();
        } else {
            new Msg().msgAtencao("Nenhum curso selecionado.");
        }
    }//GEN-LAST:event_btnGravarCdActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(getPedidosSelecionados() != null) {
            if(getPedidosSelecionados().size() == 1) {
                if(getPedidoSelecionado() != null) {
                    new EmitirCertificado().emitir(getPedidoSelecionado());
                    atualizaListagem();
                } else {
                    new Msg().msgAtencao("Nenhum pedido selecionado.");
                }
            } else {
                new Msg().msgAtencao("Somente é possível imprimir um certificado por vez.");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        Aluno a = new FormSelecionarAluno().getAluno();
        if(a != null) {
            comboBoxAluno1.atualizaCombo();
            comboBoxAluno1.setSelectedItem(a);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void comboBoxAluno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxAluno1ActionPerformed
        atualizaListagem();
    }//GEN-LAST:event_comboBoxAluno1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(getPedidoSelecionado() != null) {
            new PedidoController().cancelarCurso(getPedidoSelecionado());
            atualizaListagem();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void atualizaListagem() {
        tablePadrao1.limparTabela();
        listagem = new PedidoController().listagem(comboBoxAluno1.getAlunoSelecionado());
        if(listagem != null) {
            for(Pedido p : listagem) {
                if(p.isCancelado()) {
                    tablePadrao1.adicionarLinha(new Object[] {getTextRiscado(p.getCodigo().toString()), 
                        getTextRiscado(p.getCurso().getNome()), getTextRiscado(p.getDataInicioToString()), getTextRiscado(p.getDataTerminoToString()), getTextRiscado(p.getNumeroRegistroToString().toString()),
                        getTextRiscado(p.getDataEmissaoCertificadoToString())});
                } else {
                    tablePadrao1.adicionarLinha(new Object[] {p.getCodigo(), 
                    p.getCurso().getNome(), p.getDataInicioToString(), p.getDataTerminoToString(), p.getNumeroRegistroToString(),
                    p.getDataEmissaoCertificadoToString()});
                }
                
            }
        }
        tablePadrao1.clearSelection();
        tablePadrao1.selectAndScroll(tablePadrao1.getRowCount()-1);
    }
    
    private List<Pedido> getPedidosSelecionados() {
        List<Pedido> listagemPedidosSel = new ArrayList<>();
        for(int i : tablePadrao1.getSelectedRows()) {
            listagemPedidosSel.add(listagem.get(i));
        }
        return listagemPedidosSel;
    }
    
    private Pedido getPedidoSelecionado() {
        if(tablePadrao1.getSelectedRow() != -1) {
            return listagem.get(tablePadrao1.getSelectedRow());
        }
        return null;
    }
    
    private String getTextRiscado(String text) {
        return "<html><strike>" + text + "</html></strike>";
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGravarCd;
    private gui.ComboBoxAluno comboBoxAluno1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private gui.TablePadrao tablePadrao1;
    // End of variables declaration//GEN-END:variables
}
