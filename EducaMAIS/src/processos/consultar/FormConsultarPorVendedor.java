package processos.consultar;

import processos.criarpedido.*;
import entidades.Pedido;
import gui.DialogPadrao;
import java.awt.Window;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.ListSelectionModel;
import reports.OpenReport;
import util.DataUtils;

public class FormConsultarPorVendedor extends DialogPadrao {
    
    private List<Pedido> listagem;
    
    public FormConsultarPorVendedor(Window parent) {
        super(parent, ModalityType.MODELESS);
        initComponents();
        
        tablePadrao1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        
        comboBoxVendedor1.atualizaComboComOpcaoTodos();
        
        txtDataInicio.setDate(DataUtils.setDiaMes(new Date(), 1));
        txtDataTermino.setDate(DataUtils.setDiaMes(new Date(), 31));
        
        atualizaListagem();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablePadrao1 = new gui.TablePadrao();
        comboBoxVendedor1 = new gui.ComboBoxVendedor();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtDataInicio = new org.jdesktop.swingx.JXDatePicker();
        jLabel8 = new javax.swing.JLabel();
        txtDataTermino = new org.jdesktop.swingx.JXDatePicker();
        jButton1 = new javax.swing.JButton();

        setTitle("Consulta");

        tablePadrao1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Aluno", "Curso", "Data Início", "Data Conclusão", "Nº de Registro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePadrao1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(tablePadrao1);
        if (tablePadrao1.getColumnModel().getColumnCount() > 0) {
            tablePadrao1.getColumnModel().getColumn(1).setPreferredWidth(350);
            tablePadrao1.getColumnModel().getColumn(2).setPreferredWidth(350);
            tablePadrao1.getColumnModel().getColumn(3).setPreferredWidth(100);
            tablePadrao1.getColumnModel().getColumn(4).setPreferredWidth(100);
            tablePadrao1.getColumnModel().getColumn(5).setPreferredWidth(75);
        }

        comboBoxVendedor1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboBoxVendedor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxVendedor1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Vendedor:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Data de Início:");

        txtDataInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataInicioActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Data de Término:");

        txtDataTermino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataTerminoActionPerformed(evt);
            }
        });

        jButton1.setText("Imprimir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtDataTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(comboBoxVendedor1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 591, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comboBoxVendedor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxArea1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxArea1ActionPerformed
        atualizaListagem();
    }//GEN-LAST:event_comboBoxArea1ActionPerformed

    private void comboBoxVendedor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxVendedor1ActionPerformed
        atualizaListagem();
    }//GEN-LAST:event_comboBoxVendedor1ActionPerformed

    private void txtDataInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataInicioActionPerformed
        atualizaListagem();
    }//GEN-LAST:event_txtDataInicioActionPerformed

    private void txtDataTerminoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataTerminoActionPerformed
        atualizaListagem();
    }//GEN-LAST:event_txtDataTerminoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new OpenReport().abrir("/reports/cursosporvendedor/CursosPorVendedor.jasper", getParametros());
    }//GEN-LAST:event_jButton1ActionPerformed

    private Map getParametros() {
        Map<String, Object> list = new HashMap<>();
        list.put("codigo_vendedor", comboBoxVendedor1.getVendedorSelecionado().getCodigo());
        list.put("data_inicio", txtDataInicio.getDate());
        list.put("data_final", txtDataTermino.getDate());
        list.put("nome_vendedor", comboBoxVendedor1.getVendedorSelecionado().getNome());
        return list;
    }
    
    
    private void atualizaListagem() {
        tablePadrao1.limparTabela();
        listagem = new PedidoController().listagem(comboBoxVendedor1.getVendedorSelecionado(), txtDataInicio.getDate(), txtDataTermino.getDate());
        if(listagem != null) {
            for(Pedido p : listagem) {
                if(p.isCancelado()) {
                    tablePadrao1.adicionarLinha(new Object[] {getTextRiscado(p.getDataCadastroToString()), getTextRiscado(p.getAluno().getNome()), 
                        getTextRiscado(p.getCurso().getNome()), getTextRiscado(p.getDataInicioToString()), getTextRiscado(p.getDataTerminoToString()), getTextRiscado(p.getNumeroRegistroToString()),
                        getTextRiscado(p.getDataEmissaoCertificadoToString())});
                } else {
                    tablePadrao1.adicionarLinha(new Object[] {p.getDataCadastroToString(), p.getAluno().getNome(), 
                        p.getCurso().getNome(), p.getDataInicioToString(), p.getDataTerminoToString(), p.getNumeroRegistroToString(),
                        p.getDataEmissaoCertificadoToString()});
                }
            }
        }
        tablePadrao1.selectAndScroll(0);
    }
    
    private List<Pedido> getPedidosSelecionados() {
        List<Pedido> listagemPedidosSel = new ArrayList<>();
        for(int i : tablePadrao1.getSelectedRows()) {
            listagemPedidosSel.add(listagem.get(i));
        }
        return listagemPedidosSel;
    }
    
    private Pedido getPedidoSelecionado() {
        if(tablePadrao1.getSelectedRow() != -1) {
            return listagem.get(tablePadrao1.getSelectedRow());
        }
        return null;
    }
    
    private String getTextRiscado(String text) {
        return "<html><strike>" + text + "</html></strike>";
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.ComboBoxVendedor comboBoxVendedor1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private gui.TablePadrao tablePadrao1;
    private org.jdesktop.swingx.JXDatePicker txtDataInicio;
    private org.jdesktop.swingx.JXDatePicker txtDataTermino;
    // End of variables declaration//GEN-END:variables
}
